version: "3.8"

services:
  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - user-service
      - course-service
      - registration-service
    environment:
      - USER_SERVICE_URL=http://user-service:3001
      - COURSE_SERVICE_URL=http://course-service:3002
      - REGISTRATION_SERVICE_URL=http://registration-service:3003
    networks:
      - app-network

  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      - mongo
    environment:
      - MONGO_URL=mongodb://mongo:27017/userdb
    networks:
      - app-network

  # Course Service
  course-service:
    build:
      context: ./course-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    depends_on:
      - mongo
    environment:
      - MONGO_URL=mongodb://mongo:27017/coursedb
    networks:
      - app-network

  # Registration Service
  registration-service:
    build:
      context: ./registration-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    depends_on:
      - mongo
      - rabbitmq
    environment:
      - MONGO_URL=mongodb://mongo:27017/registrationdb
      - RABBITMQ_URL=amqp://rabbitmq:5672
    networks:
      - app-network

  # MongoDB (общая база для всех сервисов, можно разделять на разные базы)
  mongo:
    image: mongo:6.0
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672" # AMQP
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
